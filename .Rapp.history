rep2=as.matrix(colSums(rep1[2:dim(rep1)[1],]))
rep3=rep2/sum(rep2)
#Total of seedlings being produced per capita in each stage
rep4=recruitNumber/rep3
rep4
rep2/sum(rep2)
rep4=recruitNumber*rep3
rep4
as.matrix(colSums(rep1[2:dim(rep1)[1],]))
discretize=c(2,5,10,15,20,25,50,max(c(d$Size,d$SizeNext),na.rm=T)+1)
seedlingSizeThreshold=5
#By
if (variable == "Age" & !is.na(seedlingSizeThreshold)) {print("seedlingSizeThreshold reset to NA for age-based models")}
d1=d			#d[which(!is.na(d[,variable])),]
d1$catNow=d1$catNext=NA
#Number of individuals transitioning
#Evaluate only those that are transitioning
indexTrans=which(!is.na(d[,variable]) & !is.na(d[,paste(variable,"Next",sep="")]))
for (i in rev(discretize)) {
for (j in indexTrans) {
if (d1[,variable][j]<i) {d1$catNow[j]=i}
if (d1$Surv[j]==0) {d1$catNext[j]=NA} else {
if (d1[,paste(variable,"Next",sep="")][j]<i) {d1$catNext[j]=i}}
print(paste(variable, "class", i, "of individual", j, "in dataset"))
}
}
#d1$catNow[which(d1$catNow==max(c(d$Size,d$SizeNext),na.rm=T)+1)]=50
d1$catNow[which(d1$catNow==max(c(d[,variable],d[,paste(variable,"Next",sep="")]),na.rm=T)+1)]=discretize[length(discretize)-1]
#d1$catNext[which(d1$catNext==max(c(d$Size,d$SizeNext),na.rm=T)+1)]=50
d1$catNext[which(d1$catNext==max(c(d[,variable],d[,paste(variable,"Next",sep="")]),na.rm=T)+1)]=discretize[length(discretize)-1]
#Making sure that both catNow and catNext have all range of values for discretize
#missingCatNow=which(!discretize %in% unique(d1$catNow))
#missingCatNext=which(!discretize %in% unique(d1$catNext))
#Frequency of transitions
matU = table(d1$catNext,d1$catNow)
matU
surv = as.data.frame(colSums(table(d1$Surv,d1$catNow)))
for (i in as.numeric(rownames(surv))){matU[,i]=matU[,i]/surv[which(rownames(surv)==as.character(i)),]}
matU
surv = as.data.frame(colSums(table(d1$Surv,d1$catNow)))
for (i in as.numeric(rownames(surv))){matU[,i]=matU[,i]/surv[which(rownames(surv)==as.character(i)),]}
surv
as.numeric(rownames(surv))
1:length(surv))
1:length(surv)
length(surv)
length(surv[,2]
)
surv
dim(surv)
1:dim(surv[,2])[1]
dim(surv[,2])
1:dim(surv)[1]
if (variable=="Size") {for (i in 1:dim(surv)[1]){matU[,i]=matU[,i]/surv[which(rownames(surv)==as.character(i)),]}}
if (variable=="Size") {for (i in 1:dim(surv)[1]){matU[,i]=matU[,i]/surv}
}
matU
matU = table(d1$catNext,d1$catNow)
matU
class(matU)
matU = as.matrix(table(d1$catNext,d1$catNow))
matU
class(matU)
surv
variable=="Age"
variable=="Size"
matU
surv
surv[,1]
matU/surv[,1]
if (variable=="Size") {matU=matU/surv[,1]}
matU
colSums(matU)
if (variable == "Size") {
recruits=d$SizeNext[which(is.na(d$Size) & !is.na(d$SizeNext) & d$SizeNext<seedlingSizeThreshold)]
}
if (variable == "Age") {
recruits=d$AgeNext[which(d$AgeNext==1)]
}
recruitNumber=length(recruits)
rep=rep1=table(d1$Fert,d1$catNow)
for (i in 1:dim(rep)[2]) {
rep1[,i]=rep[,i]*as.numeric(rownames(rep))
}
as.matrix(colSums(rep1[2:dim(rep1)[1],]))
rep2=as.matrix(colSums(rep1[2:dim(rep1)[1],]))
rep2/sum(rep2)
rep3=rep2/sum(rep2)
recruitNumber
recruitNumber*rep3
rep4=recruitNumber*rep3
matF=matrix(0,length(discretize),length(discretize))
colnames(matF)=colnames(matF)=discretize
matF
for (i in as.numeric(rownames(rep4))){
matF[1,i]=as.numeric(rep4[which(as.numeric(rownames(rep4))==i)])
}
rep4
as.numeric(rownames(rep4))
for (i in as.numeric(rownames(rep4))){
matF[1,i]=as.numeric(rep4[which(as.numeric(rownames(rep4))==i)])
}
matF
matF=matrix(0,length(discretize),length(discretize))
colnames(matF)=colnames(matF)=discretize
matF
matF
matF[1,]=rep4
matF[1,]
rep4
matF=matrix(0,length(discretize)-1,length(discretize)-1)
colnames(matF)=colnames(matF)=discretize
matF
colnames(matF)=colnames(matF)=discretize[length(discretize)]
discretize[length(discretize)]
colnames(matF)=colnames(matF)=discretize[-length(discretize)]
matF
matF[1,]=rep4
matF
matA = matU + matF
out=list(matA,matU,matF)
Re(eigen(matA)$values[1])
#Read data
setwd("~/Dropbox/ageStageDecompositions/cflavadata")
data <- read.table("Population_dynamics_data.csv", header=TRUE, sep=",", na.strings="NA", dec=".", strip.white=TRUE)
data$SizeNext=NA
data$AgeNext=NA
for (i in 1997:(2012-1)){
data$SizeNext[which(data$Year==i)]=data$Size[which(data$Year==i+1)]
data$AgeNext[which(data$Year==i)]=data$Age[which(data$Year==i+1)]
}
data$Age[which(d$Age==999)]=NA
data$AgeNext[which(d$AgeNext==999)]=NA
data$Surv=NA
data$Surv[which(is.na(data$Size))]=NA
data$Surv[which(!is.na(data$Size) & is.na(data$SizeNext))]=0
data$Surv[which(!is.na(data$Size) & !is.na(data$SizeNext))]=1
data$ID[which(data$Age>data$AgeNext)]
plot(data$Age,data$AgeNext)
plot(data$Size,data$SizeNext)
#Choosing to discretize the data by size or age:
#By size:
discretize=c(2,5,10,15,20,25,50,max(c(data$Size,data$SizeNext),na.rm=T)+1)
seedlingSizeThreshold=5
#By age
discretize=1:max(c(data$Age,data$AgeNext),na.rm=T)
seedlingSizeThreshold=NA
#Take subsets by treament level:
dsubset=data[which(data$Treatment=="C")]	#For Control
dsubset=data[which(data$Treatment=="D1")]	#For Drought in 1998
dsubset=data[which(data$Treatment=="D2")]	#For Drought in 1999
setwd("~/Dropbox/ageStageDecompositions/cflavadata")
data <- read.table("Population_dynamics_data.csv", header=TRUE, sep=",", na.strings="NA", dec=".", strip.white=TRUE)
data$SizeNext=NA
data$AgeNext=NA
for (i in 1997:(2012-1)){
data$SizeNext[which(data$Year==i)]=data$Size[which(data$Year==i+1)]
data$AgeNext[which(data$Year==i)]=data$Age[which(data$Year==i+1)]
}
data$Age[which(d$Age==999)]=NA
data$AgeNext[which(d$AgeNext==999)]=NA
setwd("~/Dropbox/ageStageDecompositions/cflavadata")
setwd("~/Dropbox/ageStageDecompositions/")
data <- read.table("Population_dynamics_data.csv", header=TRUE, sep=",", na.strings="NA", dec=".", strip.white=TRUE)
data$SizeNext=NA
data$AgeNext=NA
for (i in 1997:(2012-1)){
data$SizeNext[which(data$Year==i)]=data$Size[which(data$Year==i+1)]
data$AgeNext[which(data$Year==i)]=data$Age[which(data$Year==i+1)]
}
data$Age[which(d$Age==999)]=NA
data$AgeNext[which(d$AgeNext==999)]=NA
data$Surv=NA
data$Surv[which(is.na(data$Size))]=NA
data$Surv[which(!is.na(data$Size) & is.na(data$SizeNext))]=0
data$Surv[which(!is.na(data$Size) & !is.na(data$SizeNext))]=1
data$ID[which(data$Age>data$AgeNext)]
plot(data$Age,data$AgeNext)
plot(data$Size,data$SizeNext)
#Choosing to discretize the data by size or age:
#By size:
discretize=c(2,5,10,15,20,25,50,max(c(data$Size,data$SizeNext),na.rm=T)+1)
seedlingSizeThreshold=5
#By age
discretize=1:max(c(data$Age,data$AgeNext),na.rm=T)
seedlingSizeThreshold=NA
#Take subsets by treament level:
dsubset=data[which(data$Treatment=="C")]	#For Control
dsubset=data[which(data$Treatment=="D1")]	#For Drought in 1998
dsubset=data[which(data$Treatment=="D2")]	#For Drought in 1999
d=data
d=data[which(data$Treatment=="C")]	#For Control
d=data[which(data$Treatment=="C")]	#For Control
d=data
d=data[which(data$Treatment=="C")]	#For Control
names(data)
d=data
d=data[which(data$Treatment=="C"),]		#For Control
d=data[which(data$Treatment=="D1"),]	#For Drought in 1998
d=data[which(data$Treatment=="D2"),]	#For Drought in 1999
d=data[which(data$Treatment=="C"),]		#For Control
if (variable == "Age" & !is.na(seedlingSizeThreshold)) {print("seedlingSizeThreshold reset to NA for age-based models")}
d1=d			#d[which(!is.na(d[,variable])),]
d1$catNow=d1$catNext=NA
#Number of individuals transitioning
#Evaluate only those that are transitioning
indexTrans=which(!is.na(d[,variable]) & !is.na(d[,paste(variable,"Next",sep="")]))
for (i in rev(discretize)) {
for (j in indexTrans) {
if (d1[,variable][j]<i) {d1$catNow[j]=i}
if (d1$Surv[j]==0) {d1$catNext[j]=NA} else {
if (d1[,paste(variable,"Next",sep="")][j]<i) {d1$catNext[j]=i}}
print(paste(variable, "class", i, "of individual", j, "in dataset"))
}
}
discretize
discretize=c(2,5,10,15,20,25,50,max(c(data$Size,data$SizeNext),na.rm=T)+1)
seedlingSizeThreshold=5
#By
d=data
d=data[which(data$Treatment=="C"),]		#For Control
if (variable == "Age" & !is.na(seedlingSizeThreshold)) {print("seedlingSizeThreshold reset to NA for age-based models")}
d1=d			#d[which(!is.na(d[,variable])),]
d1$catNow=d1$catNext=NA
#Number of individuals transitioning
#Evaluate only those that are transitioning
indexTrans=which(!is.na(d[,variable]) & !is.na(d[,paste(variable,"Next",sep="")]))
for (i in rev(discretize)) {
for (j in indexTrans) {
if (d1[,variable][j]<i) {d1$catNow[j]=i}
if (d1$Surv[j]==0) {d1$catNext[j]=NA} else {
if (d1[,paste(variable,"Next",sep="")][j]<i) {d1$catNext[j]=i}}
print(paste(variable, "class", i, "of individual", j, "in dataset"))
}
}
d1$catNow[which(d1$catNow==max(c(d[,variable],d[,paste(variable,"Next",sep="")]),na.rm=T)+1)]=discretize[length(discretize)-1]
#d1$catNext[which(d1$catNext==max(c(d$Size,d$SizeNext),na.rm=T)+1)]=50
d1$catNext[which(d1$catNext==max(c(d[,variable],d[,paste(variable,"Next",sep="")]),na.rm=T)+1)]=discretize[length(discretize)-1]
matU = as.matrix(table(d1$catNext,d1$catNow))
matU
colSums(matU)
surv = as.data.frame(colSums(table(d1$Surv,d1$catNow)))
matU/surv[,1]
colSums(matU/surv[,1])
d1$catNow
table(d1$Surv,d1$catNow)
as.data.frame(colSums(table(d1$Surv,d1$catNow)))
table(d$Surv)
d1$Surv
table(d1$Surv,d1$catNow)
